{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isVisible","setIsVisible","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAuBMC,EAtDD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOC,GAEzB,OAAQP,GACN,KAAKL,EAASa,SACZF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEE,cAAcD,MAClB,MAEF,KAAKhB,EAASkB,OACZP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEI,OAASH,EAAEG,UAWnB,OAJIZ,GACFI,EAAaS,UAGRT,EA6BcU,CACnBpB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaL,EAASa,WAEtCY,QAnCmB,WACzBnB,EAAYN,EAASa,UACrBH,GAAa,IA2BT,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaL,EAASkB,SAEtCO,QAzCa,WACnBnB,EAAYN,EAASkB,QACrBR,GAAa,IAiCT,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAajB,IAEjBkB,QAzCQ,WACdjB,GAAc,SAAAkB,GAAQ,OAAKA,KAC3BhB,GAAcH,KAAgBF,IAiC1B,qBAWCI,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAxDI,WACZnB,EAAYN,EAASI,MACrBI,GAAc,GACdE,GAAa,IAkDP,sBAUJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.993b4589.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => (\n        a.localeCompare(b)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (\n        a.length - b.length));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n    setIsVisible(true);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n    setIsVisible(true);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n    setIsVisible(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(reversed => !reversed);\n    setIsVisible(!isReversed || !!sortType);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}